matrix:
  REGISTRY:
    - stoneagle
  GOPATH:
    - /go/src 
  USERNAME:
    - wuzhongyang 
  PROJ:
    - evolution
  WORKPATH:
    - /home/wuzhongyang/drone/src
  GOVERSION:
    - 1.10
  RELEASE_DIR:
    - release

workspace:
  base: ${WORKPATH} 
  path: ${PROJ} 

branches: [ master, develop, release ]

pipeline:
  clone:
    git:
      image: plugins/git
      recursive: false
      depth: 1
  git-ls:
    image: alpine/git 
    when:
      branch: develop 
    volumes:
      - ${WORKPATH}/${PROJ}:${GOPATH}/${PROJ}
    commands:
      - cd ${GOPATH}
      - ls
      - cd ${GOPATH}/${PROJ}
      - ls 
  # git-push-master:
  #   group: sync 
  #   image: appleboy/drone-git-push
  #   remote: git@github.com:stoneagle/evolution.git 
  #   secrets: [ GIT_PUSH_SSH_KEY ]
  #   force: true
  #   commit: true
  #   commit_message: ${DRONE_COMMIT_MESSAGE}
  #   branch: master
  #   local_ref: master
  #   when:
  #     branch: master
  git-push-develop:
    group: sync 
    image: appleboy/drone-git-push
    remote: git@github.com:stoneagle/evolution.git 
    secrets: [ GIT_PUSH_SSH_KEY ]
    # force: true
    branch: develop 
    local_ref: develop 
    when:
      branch: develop 
  # git-push-release:
  #   group: sync 
  #   image: appleboy/drone-git-push
  #   remote: git@github.com:stoneagle/evolution.git 
  #   secrets: [ GIT_PUSH_SSH_KEY ]
  #   force: true
  #   commit: true
  #   commit_message: ${DRONE_COMMIT_MESSAGE}
  #   branch: release 
  #   local_ref: release 
  #   when:
  #     branch: release 

  restore-vendor-cache:
    group: prepare-cache
    image: drillster/drone-volume-cache
    restore: true
    mount:
      - ./backend/vendor
    when:
      event: tag
      branch: release
    volumes:
      - /home/${USERNAME}/drone/cache/${PROJ}:/cache
  restore-modules-cache:
    group: prepare-cache
    image: drillster/drone-volume-cache
    restore: true
    mount:
      - ./frontend/node_modules
    when:
      event: tag
      branch: release
    volumes:
      - /home/${USERNAME}/drone/cache/${PROJ}:/cache
  vendor:
    image: instrumentisto/glide 
    group: prepare
    environment:
      - http_proxy=http://127.0.0.1:8118
      - https_proxy=http://127.0.0.1:8118
    when:
      event: tag
      branch: release
    network_mode: host
    volumes:
      - ${WORKPATH}/${PROJ}/backend:${GOPATH}/${PROJ}/backend
    commands:
      - cd ${GOPATH}/${PROJ}/backend && glide update 
  modules:
    image: alexsuch/angular-cli:6.0.5
    group: prepare
    environment:
      - http_proxy=http://127.0.0.1:8118
      - https_proxy=http://127.0.0.1:8118
    when:
      event: tag
      branch: release
    network_mode: host
    volumes:
      - ${WORKPATH}/${PROJ}/frontend:${GOPATH}/${PROJ}/frontend
    commands:
      - cd ${GOPATH}/${PROJ}/frontend && npm install 
  rebuild-vendor-cache:
    group: rebuild-cache 
    image: drillster/drone-volume-cache
    rebuild: true
    when:
      event: tag
      branch: release
    mount:
      - ./backend/vendor
    volumes:
      - /home/${USERNAME}/drone/cache/${PROJ}:/cache
  rebuild-modules-cache:
    group: rebuild-cache
    image: drillster/drone-volume-cache
    rebuild: true
    when:
      event: tag
      branch: release
    mount:
      - ./frontend/node_modules
    volumes:
      - /home/${USERNAME}/drone/cache/${PROJ}:/cache

  time:
    group: service
    image: golang:${GOVERSION}
    environment:
      - CGO_ENABLED:0
    volumes:
      - ${WORKPATH}/${PROJ}/${RELEASE_DIR}:${GOPATH}/${RELEASE_DIR}
      - ${WORKPATH}/${PROJ}/backend:${GOPATH}/${PROJ}/backend 
    when:
      event: tag
      branch: release
    commands:
      - make check-release 
      - cd ${GOPATH}/${PROJ}/backend/time
      - go build -o ${GOPATH}/${RELEASE_DIR}/time -a -tags netgo -installsuffix netgo -ldflags '-w'
      - cd ${GOPATH}/${PROJ}/backend/time/initial
      - go build -o ${GOPATH}/${RELEASE_DIR}/time-init-db -a -tags netgo -installsuffix netgo -ldflags '-w'
  system:
    group: service
    image: golang:${GOVERSION}
    environment:
      - CGO_ENABLED:0
    volumes:
      - ${WORKPATH}/${PROJ}/${RELEASE_DIR}:${GOPATH}/${RELEASE_DIR}
      - ${WORKPATH}/${PROJ}/backend:${GOPATH}/${PROJ}/backend 
    when:
      event: tag
      branch: release
    commands:
      - make check-release 
      - cd ${GOPATH}/${PROJ}/backend/system
      - go build -o ${GOPATH}/${RELEASE_DIR}/system -a -tags netgo -installsuffix netgo -ldflags '-w'
      - cd ${GOPATH}/${PROJ}/backend/system/initial
      - go build -o ${GOPATH}/${RELEASE_DIR}/system-init-db -a -tags netgo -installsuffix netgo -ldflags '-w'
  frontend:
    group: service
    image: alexsuch/angular-cli:6.0.5
    volumes:
      - ${WORKPATH}/${PROJ}/${RELEASE_DIR}:/tmp/${RELEASE_DIR}
      - ${WORKPATH}/${PROJ}/frontend:/tmp/frontend 
    when:
      event: tag
      branch: release
    commands:
      - cd /tmp/frontend && ng build --environment=prod 
       
  time-build:
    group: image 
    image: plugins/docker
    repo: ${REGISTRY}/${PROJ}-time
    dockerfile: ${WORKPATH}/${PROJ}/hack/release/Dockerfile.time
    secrets: [ DOCKER_USERNAME, DOCKER_PASSWORD ]
    tags: "${DRONE_TAG}"
    when:
      event: tag
      branch: release
  system-build:
    group: image 
    image: plugins/docker
    repo: ${REGISTRY}/${PROJ}-system
    dockerfile: ${WORKPATH}/${PROJ}/hack/release/Dockerfile.system
    secrets: [ DOCKER_USERNAME, DOCKER_PASSWORD ]
    tags: "${DRONE_TAG}"
    when:
      event: tag
      branch: release
  frontend-build:
    group: image 
    image: plugins/docker
    repo: ${REGISTRY}/${PROJ}-frontend
    dockerfile: ${WORKPATH}/${PROJ}/hack/release/Dockerfile.frontend
    secrets: [ DOCKER_USERNAME, DOCKER_PASSWORD ]
    tags: "${DRONE_TAG}"
    when:
      event: tag
      branch: release
